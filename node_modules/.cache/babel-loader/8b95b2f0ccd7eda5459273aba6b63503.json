{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\n    this.updateChatbotState(greetingMessage);\n  }\n\n  updateChatbotState(message) {\n    // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\n    this.setState(prevState => ({ ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["C:/Users/KIMBI/Desktop/test/test 100 projects/react/my-app/src/Components/Main/ActionProvider.js"],"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","setState","greet","greetingMessage","updateChatbotState","message","prevState","messages"],"mappings":"AAAA,MAAMA,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,oBAAD,EAAuBC,YAAvB,EAAqC;AAC9C,SAAKD,oBAAL,GAA4BA,oBAA5B;AACA,SAAKE,QAAL,GAAgBD,YAAhB;AACD;;AAEDE,EAAAA,KAAK,GAAG;AACN,UAAMC,eAAe,GAAG,KAAKJ,oBAAL,CAA0B,aAA1B,CAAxB;AACA,SAAKK,kBAAL,CAAwBD,eAAxB;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,OAAD,EAAU;AAE9B;AAGG,SAAKJ,QAAL,CAAcK,SAAS,KAAK,EACvB,GAAGA,SADoB;AACTC,MAAAA,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAd,EAAwBF,OAAxB;AADD,KAAL,CAAvB;AAGA;;AAnBgB;;AAsBnB,eAAeR,cAAf","sourcesContent":["class ActionProvider {\r\n    constructor(createChatBotMessage, setStateFunc) {\r\n      this.createChatBotMessage = createChatBotMessage;\r\n      this.setState = setStateFunc;\r\n    }\r\n    \r\n    greet() {\r\n      const greetingMessage = this.createChatBotMessage(\"Hi, friend.\")\r\n      this.updateChatbotState(greetingMessage)\r\n    }\r\n    \r\n    updateChatbotState(message) {\r\n   \r\n  // NOTE: This function is set in the constructor, and is passed in      // from the top level Chatbot component. The setState function here     // actually manipulates the top level state of the Chatbot, so it's     // important that we make sure that we preserve the previous state.\r\n   \r\n      \r\n     this.setState(prevState => ({\r\n          ...prevState, messages: [...prevState.messages, message]\r\n      }))\r\n    }\r\n  }\r\n  \r\n  export default ActionProvider"]},"metadata":{},"sourceType":"module"}